You are working on a Meteor.js rideshare application with multi-rider carpooling, interactive map-based place selection using tileserver proxy, UUID-based place references, modern mobile UI with styled-components, and comprehensive test data generation - the codebase follows imports/api/{collection}/{Methods,Publications}.js for backend, imports/ui/mobile/{components,pages}/ for frontend, with places/rides relational data structure and backward compatibility for legacy schemas.

### Package Manager: 
- Uses `meteor` commands (not npm/yarn/pnpm)

## IMPORTANT

### file locations

- normal components: app/imports/ui/mobile/components
- normal styles app/imports/ui/mobile/styles
- pages: app/imports/ui/mobile/pages

LiquidGlass Component Library Location:
- **Components**: `app/imports/ui/mobile/liquidGlass/components/`
- **Styles**: `app/imports/ui/mobile/liquidGlass/styles/`

# DO NOT USE app/imports/ui/components and app/imports/ui/pages! legacy.

# commit to git, after each changes.

## COMMIT INSTRUCTIONS

- you are allowed to make multiple commits when i tell you to.
- always check git status before committing.
- one commit, per type of change ex: one commit per style change, one commit per component...
- use Bash command tool to run git commands.
- commit after each change.

## docker

- docker compose: docker-compose.yml
- use docker compose instead of docker-compose

---

# LiquidGlass Component Library Status

## ✅ COMPLETED COMPONENTS

The LiquidGlass component library now includes these fully implemented components with glass morphism effects:

### Core Components
- **Button.jsx** - Glass morphism button with label text
- **Dropdown.jsx** - Select/dropdown with searchable, multi-select capabilities
- **TextInput.jsx** - Full-featured text input with icons, labels, validation
- **IconButton.jsx** - Circular button for single characters/emojis
- **Navbar.jsx** - Glass navigation bar with responsive mobile menu
- **Footer.jsx** - Glass footer with newsletter signup and responsive design

### Recent Improvements (All Completed)
- ✅ Performance optimized (removed nano texture dots that caused lag)
- ✅ Mobile-friendly responsive design
- ✅ Clean branding (removed "Carpool Test" references)
- ✅ Improved accessibility (black text with underlines for better visibility)
- ✅ Footer links properly configured (Privacy Policy, Terms of Service, Credits)
- ✅ TextInput integrated in LiquidGlass components (Footer newsletter, TestMapView)
- ✅ Comprehensive testing page available at TestMapView.jsx

### Usage Examples
- See `imports/ui/mobile/pages/TestMapView.jsx` for comprehensive component demos
- Footer newsletter uses LiquidGlassTextInput with email icon
- All inputs in TestMapView use LiquidGlassTextInput with appropriate labels and icons
- IconButton examples show various sizes, colors, and badge configurations

## Component Features

### LiquidGlassTextInput
- Multiple input types (text, email, password, search, number)
- Icon support (left/right positioning)
- Floating labels with animations
- Error states, helper text, character counting
- Multiple sizes and responsive design
- Glass morphism effects with blur

### LiquidGlassIconButton  
- Circular design for single chars/emojis
- Multiple sizes (small, medium, large, xlarge)
- Color variants (default, primary, secondary, success, warning, danger)
- Badge support for notifications
- Hover animations and accessibility

### All Components Share
- Consistent glass morphism design language
- Chromatic aberration effects (subtle color shifts)
- Responsive design principles
- Accessibility features (ARIA labels, focus states)
- Smooth animations and transitions

## Development Notes

- All components follow the same glass morphism pattern
- Performance optimized (removed heavy texture patterns)
- Mobile-first responsive design
- Consistent naming conventions and PropTypes
- Well-documented with comprehensive examples
- Git history properly maintained with descriptive commits

## TODO tracking

- Track progress with ../TODO.md in "builder.io section"
- All LiquidGlass improvement tasks have been completed
- New tasks should be added to TODO.md as needed
