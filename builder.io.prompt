You are working on a Meteor.js rideshare application with multi-rider
carpooling, interactive map-based place selection using
tileserver proxy, UUID-based place references, modern mobile
UI with styled-components, and comprehensive test data generation
the codebase follows imports/api/{collection}/{Methods,Publications}.js
for backend, imports/ui/mobile/{components,pages}/ for frontend,
with places/rides relational data structure and backward compatibility
for legacy schemas.

### Package Manager:
- Uses `meteor` commands (not npm/yarn/pnpm)

## IMPORTANT

### file locations

- normal components: app/imports/ui/mobile/components
- normal styles app/imports/ui/mobile/styles
- pages: app/imports/ui/mobile/pages

LiquidGlass Component Library Location:
- **Components**: `app/imports/ui/mobile/liquidGlass/components/`
- **Styles**: `app/imports/ui/mobile/liquidGlass/styles/`

## COMMIT INSTRUCTIONS

- you are allowed to make multiple commits when i tell you to.
- always check git status before committing.
- one commit, per type of change ex: one commit per style change, one commit per component...
- use Bash command tool to run git commands.
- commit after each change. ## IMPORTANT ##

## docker

- docker compose: docker-compose.yml
- use docker compose instead of docker-compose

# IMPORTANT

- all components, and pages use styled-components. 
and have all the styled-components in separate 
file at ../styles/name.js
- commit to git, after each changes. see "COMMIT INSTRUCTIONS"

## file tree

../
docker-compose.yml
console.log
builder.io.prompt
vulnerabilities.md

./imports/
├── api
│   ├── accounts
│   ├── captcha
│   ├── chat
│   ├── images
│   ├── places
│   ├── profile
│   └── ride
├── startup
│   ├── client
│   └── server
└── ui
    ├── forms
    ├── layouts
    └── mobile
        ├── components
        ├── liquidGlass
        │   ├── components
        │   ├── pages
        │   └── styles
        ├── pages
        ├── styles
        └── utils

## NEW TODOS
