You are working on a Meteor.js rideshare application with multi-rider carpooling, interactive map-based place selection using tileserver proxy, UUID-based place references, modern mobile UI with styled-components, and comprehensive test data generation - the codebase follows imports/api/{collection}/{Methods,Publications}.js for backend, imports/ui/mobile/{components,pages}/ for frontend, with places/rides relational data structure and backward compatibility for legacy schemas.

### Package Manager:
- Uses `meteor` commands (not npm/yarn/pnpm)

## IMPORTANT

### file locations

- normal components: app/imports/ui/mobile/components
- normal styles app/imports/ui/mobile/styles
- pages: app/imports/ui/mobile/pages

LiquidGlass Component Library Location:
- **Components**: `app/imports/ui/mobile/liquidGlass/components/`
- **Styles**: `app/imports/ui/mobile/liquidGlass/styles/`

# DO NOT USE app/imports/ui/legacy/components and app/imports/ui/legacy/pages! Those are legacy paths that have been moved.

## Legacy Path Update
- `app/imports/ui/components` → moved to `app/imports/ui/legacy/components`
- `app/imports/ui/pages` → moved to `app/imports/ui/legacy/pages`

# commit to git, after each changes.

## COMMIT INSTRUCTIONS

- you are allowed to make multiple commits when i tell you to.
- always check git status before committing.
- one commit, per type of change ex: one commit per style change, one commit per component...
- use Bash command tool to run git commands.
- commit after each change. ## IMPORTANt ##

## docker

- docker compose: docker-compose.yml
- use docker compose instead of docker-compose

---

# LiquidGlass Component Library Status

## ✅ COMPLETED COMPONENTS

The LiquidGlass component library now includes these fully implemented components with glass morphism effects:

### Core Components
- **Button.jsx** - Glass morphism button with label text
- **Dropdown.jsx** - Select/dropdown with searchable, multi-select capabilities
- **TextInput.jsx** - Full-featured text input with icons, labels, validation
- **IconButton.jsx** - Circular button for single characters/emojis
- **Navbar.jsx** - Glass navigation bar with responsive mobile menu
- **Footer.jsx** - Glass footer with newsletter signup and responsive design

### Recent Improvements (All Completed)
- ✅ Performance optimized (removed nano texture dots that caused lag)
- ✅ Mobile-friendly responsive design
- ✅ Clean branding (removed "Carpool Test" references)
- ✅ Improved accessibility (black text with underlines for better visibility)
- ✅ Footer links properly configured (Privacy Policy, Terms of Service, Credits)
- ✅ TextInput integrated in LiquidGlass components (Footer newsletter, TestMapView)
- ✅ Comprehensive testing page available at TestMapView.jsx
- ✅ **Visual consistency**: IconButton and TextInput now match Button styling exactly
- ✅ **Light bending edges**: All components have identical chromatic aberration effects
- ✅ **Black text color**: Consistent pure black (#000) text across all components

### Usage Examples
- See `imports/ui/mobile/pages/TestMapView.jsx` for comprehensive component demos
- Footer newsletter uses LiquidGlassTextInput with email icon
- All inputs in TestMapView use LiquidGlassTextInput with appropriate labels and icons
- IconButton examples show various sizes, colors, and badge configurations

## Component Features

### LiquidGlassTextInput
- Multiple input types (text, email, password, search, number)
- Icon support (left/right positioning)
- Floating labels with animations
- Error states, helper text, character counting
- Multiple sizes and responsive design
- Glass morphism effects with blur

### LiquidGlassIconButton
- Circular design for single chars/emojis
- Multiple sizes (small, medium, large, xlarge)
- Color variants (default, primary, secondary, success, warning, danger)
- Badge support for notifications
- Hover animations and accessibility

### All Components Share
- **Identical glass morphism design language** - exact same blur, light bending, and layering
- **Chromatic aberration effects** - precise color channel shifts with hue-rotate(±8deg)
- **Light bending edges** - inset box-shadows for RGB separation effects
- **Pure black text color** (#000) for maximum visibility and consistency
- **Rounded pill shapes** (1000px border-radius) or perfect circles (50% for IconButton)
- **Responsive design principles** with mobile-first approach
- **Accessibility features** (ARIA labels, focus states, keyboard navigation)
- **Smooth animations** - translateY(-1px) on hover, consistent box-shadow transitions

## Development Notes

- **Exact styling consistency**: All components use identical Background → BlurContainer → BlurEffect → FillLayer → GlassEffectLayer structure
- **Light bending implementation**: ChromaticAberration with hue-rotate(8deg/-8deg), mix-blend-mode (color-dodge/soft-light)
- **Performance optimized**: Removed heavy texture patterns, efficient blur and effect stacking
- **Mobile-first responsive design** with consistent breakpoints and scaling
- **Black text standard**: Pure black (#000) for optimal readability across all components
- **Consistent naming conventions** and comprehensive PropTypes validation
- **Well-documented** with comprehensive examples and interactive testing in TestMapView.jsx
- **Git history properly maintained** with descriptive commits tracking each improvement

## TODO tracking

- Track progress with ../TODO.md in "builder.io section"
- All LiquidGlass improvement tasks have been completed
- New tasks should be added to TODO.md as needed

# IMPORTANT all components, and pages use styled-components. and have all the styled-components in separate file at ../styles/name.js

## NEW TODOS

### ✅ TODO 1. Update all pages to use centralized component instead of individual implementations

~~8756649 did not completely finish that.~~

**COMPLETED** [b29c8d0] - Fixed all legacy import references:
- Updated 5 files to use correct legacy component paths
- All pages now properly reference `/imports/ui/legacy/components/` instead of `/imports/ui/components/`
- Centralized component usage task is now complete

remember,

- normal components: app/imports/ui/mobile/components
- normal styles app/imports/ui/mobile/styles
- pages: app/imports/ui/mobile/pages

app/imports/ui/components and app/imports/ui/pages is legacy and not updated anymore

### ✅ TODO 2 - COMPLETED

~~the map components is trying to load the image tiles, on the main thread. make the maps load images in a async way.
the tiles are being loaded with a tileserver-gl proxy in app/imports/startup/server/ServerRoutes.js.~~

**COMPLETED** [61841db, ce756eb] - Implemented async tile loading system:
- Created AsyncTileLoader with Web Worker support and IndexedDB caching
- Created AsyncTileLayer extending Leaflet TileLayer for non-blocking tile loading
- Updated MapView and InteractiveMapPicker to use AsyncTileLayer
- Features include progressive loading, preloading, error handling, and fallbacks
- Prevents main thread blocking when loading map tiles from tileserver proxy
- Improves map rendering performance and user experience significantly
